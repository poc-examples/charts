{{- if or .Values.gitlab.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: artifacts
  annotations:
    argocd.argoproj.io/sync-wave: "-6"
spec:
  goTemplate: true
  goTemplateOptions:
    - "missingkey=error"
  generators:
    - matrix:
        generators:
          - clusters:
              selector:
                matchLabels:
                  cluster: default
          - list:
              elements:
              {{- if .Values.gitlab.enabled }}
                - application: gitlab-service
                  namespace: "{{ .Values.gitlab.namespace }}"
                  wave: "-2"
                  chart: 
                    name: gitlab
                    url: https://poc-examples.github.io/charts
                    version: "{{ .Values.gitlab.chartVersion }}"
                  values: |
                    namespace: "{{ .Values.gitlab.namespace }}"
                    domain: "{{ `{{ .metadata.labels.domain }}` }}"
                    ansible-runner:
                      runner:
                        name: approval-install-plan
                        namespace: gitlab-system
                        annotations:
                          argocd.argoproj.io/sync-wave: "0"
                      requirements:
                        collections:
                          - name: bootstrap.workshop
                            source: https://github.com/poc-examples/ansible-collections.git#/bootstrap/workshop
                            type: git
                            version: main
                            roles:
                              - name: install-plans
                          - name: kubernetes.core
                            source: "https://galaxy.ansible.com"
                          - name: community.kubernetes
                            source: "https://galaxy.ansible.com"
                          - name: community.okd
                            source: "https://galaxy.ansible.com"
                      additionalVars:
                        namespace: "gitlab-system"
                        csv_name: "gitlab-operator-kubernetes.v1.4.0"
                      scope: Role
                      rules:
                        - apiGroups:
                            - "operators.coreos.com"
                          resources: 
                            - "installplans"
                          verbs:
                            - "get"
                            - "list"
                            - "create"
                            - "update"
                            - "patch"

              {{- end }}
              {{- if .Values.gitlab.enabled }}
                - application: gitlab-config
                  namespace: "{{ .Values.gitlab.namespace }}"
                  wave: "-1"
                  chart: 
                    name: ansible-runner
                    url: https://poc-examples.github.io/supporting-charts
                    version: "0.2.1"
                  values: |
                    runner:
                      name: gitlab-configure
                      namespace: gitlab-system
                      annotations:
                        argocd.argoproj.io/sync-wave: "0"
                    scope: ClusterRole
                    additionalVars:
                      domain: "{{ `{{ .metadata.labels.domain }}` }}"
                    rules:
                      - apiGroups:
                          - "external-secrets.io"
                        resources: 
                          - "pushsecrets"
                        verbs:
                          - "get"
                          - "list"
                          - "create"
                          - "update"
                          - "patch"
                      - apiGroups:
                          - ""
                        resources:
                          - "secrets"
                          - "configmaps"
                        verbs:
                          - "get" 
                          - "list"
                          - "create"
                          - "update"
                          - "patch"
                      - apiGroups:
                          - "apps"
                        resources:
                          - "deployments"
                        verbs:
                          - "get"
                          - "list"
                          - "create"
                          - "update"
              {{- end }}
  template:
    metadata:
      name: "{{ `{{ .application }}` }}"
      annotations:
        argocd.argoproj.io/sync-wave: "{{ `{{ .wave }}` }}"
    spec:
      destination:
        namespace: "{{ `{{ .namespace }}` }}"
        server: "{{ `{{ .server }}` }}"
      source:
        chart: "{{ `{{ .chart.name }}` }}"
        targetRevision: "{{ `{{ .chart.version }}` }}"
        repoURL: "{{ `{{ .chart.url }}` }}"
      project: system
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            argocd.argoproj.io/managed-by: "{{ .Values.gitops.namespace }}"
        syncOptions:
          - CreateNamespace=true
          - Validate=false
  templatePatch: |
    spec:
      source:
        helm:
        {{ `{{- if (index . "values") }}` }}
          values: |
            {{ `{{- .values | nindent 12 }}` }}
        {{ `{{- end }}` }}
{{- end }}