{{- if or .Values.minio.enabled
          .Values.quay.enabled
          (and .Values.gitlab.enabled (not .Values.shared.enabled)) 
}}
{{- $prefix := "" }}
{{- if eq .Values.controller.name "workshop" }}
  {{- $prefix = "workshop-" }}
{{- end }}
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: "{{ $prefix }}artifacts"
  annotations:
    argocd.argoproj.io/sync-wave: "-4"
spec:
  goTemplate: true
  goTemplateOptions:
    - "missingkey=error"
  generators:
    - list:
        elements:
        {{- if .Values.minio.enabled }}
          - application: "{{ $prefix }}minio-service"
            namespace: minio-operator
            wave: "-2"
            chart:
              name: minio
              url: https://poc-examples.github.io/charts
              version: "{{ .Values.minio.chartVersion }}"
        {{- end }}
        {{- if .Values.npm.enabled }}
          - application: "{{ $prefix }}npm-registry-service"
            namespace: "npm-registry"
            wave: "-2"
            chart: 
              name: verdaccio
              url: https://charts.verdaccio.org
              version: "{{ .Values.npm.chartVersion }}"
            values: |
              persistence:
                enabled: true
                size: 20Gi
              secrets:
                htpasswd:
                  - username: "kubeadmin"
                    password: "PB0SyOz@z3HJ*#a!"
              service:
                type: ClusterIP
              serviceAccount:
                create: true
                name: verdaccio
              extraManifests:
                - apiVersion: rbac.authorization.k8s.io/v1
                  kind: RoleBinding
                  metadata:
                    name: verdaccio-anyuid
                  roleRef:
                    apiGroup: rbac.authorization.k8s.io
                    kind: ClusterRole
                    name: system:openshift:scc:anyuid
                  subjects:
                    - kind: ServiceAccount
                      name: verdaccio
                      namespace: npm-registry
        {{- end }}
        {{- if .Values.quay.enabled }}
          - application: "{{ $prefix }}quay-service"
            namespace: "quay-registry"
            wave: "-2"
            chart: 
              name: quay
              url: https://poc-examples.github.io/charts
              version: "{{ .Values.quay.chartVersion }}"
            values: |
              domain: "{{ .Values.cluster.domain }}"
              ###########################################################
              ## DO Not Use Region Refactor to Minio to reduce reliance 
              ## reduce reliance  on cloud
              ###########################################################
              # region: "{{ .Values.cloud.region }}"
        {{- end }}
        {{- if and .Values.gitlab.enabled (not .Values.shared.enabled) }}
          - application: gitlab-service
            namespace: "{{ .Values.gitlab.namespace }}"
            wave: "-2"
            chart: 
              name: gitlab
              url: https://poc-examples.github.io/charts
              version: "{{ .Values.gitlab.chartVersion }}"
            ignoreDifferences: |
              - kind: GitLab
                name: gitlab
                namespace: gitlab-system
                jsonPointers:
                  - /spec/chart/version
            values: |
              namespace: "{{ .Values.gitlab.namespace }}"
              domain: "{{ .Values.cluster.domain }}"
              ansible-runner:
                runner:
                  name: approval-install-plan
                  namespace: gitlab-system
                  annotations:
                    argocd.argoproj.io/sync-wave: "0"
                requirements:
                  collections:
                    - name: bootstrap.workshop
                      source: https://github.com/poc-examples/ansible-collections.git#/bootstrap/workshop
                      type: git
                      version: main
                      roles:
                        - name: install-plans
                    - name: kubernetes.core
                      source: "https://galaxy.ansible.com"
                    - name: community.kubernetes
                      source: "https://galaxy.ansible.com"
                    - name: community.okd
                      source: "https://galaxy.ansible.com"
                additionalVars:
                  namespace: "gitlab-system"
                  csv_name: "gitlab-operator-kubernetes.v1.7.2"
                scope: Role
                rules:
                  - apiGroups:
                      - "operators.coreos.com"
                    resources: 
                      - "installplans"
                    verbs:
                      - "get"
                      - "list"
                      - "create"
                      - "update"
                      - "patch"

        {{- end }}
        {{- if and .Values.gitlab.enabled (not .Values.shared.enabled) }}
          - application: gitlab-config
            namespace: "{{ .Values.gitlab.namespace }}"
            wave: "-1"
            chart: 
              name: ansible-runner
              url: https://poc-examples.github.io/supporting-charts
              version: "0.2.7"
            values: |
              runner:
                name: gitlab-configure
                namespace: gitlab-system
                annotations:
                  argocd.argoproj.io/sync-wave: "0"
              scope: ClusterRole
              additionalVars:
                domain: "{{ .Values.cluster.domain }}"
              additionalPackages:
                - python-gitlab
              rules:
                - apiGroups:
                    - "external-secrets.io"
                  resources: 
                    - "pushsecrets"
                  verbs:
                    - "get"
                    - "list"
                    - "create"
                    - "update"
                    - "patch"
                - apiGroups:
                    - ""
                  resources:
                    - "secrets"
                    - "configmaps"
                  verbs:
                    - "get" 
                    - "list"
                    - "create"
                    - "update"
                    - "patch"
                - apiGroups:
                    - "apps"
                  resources:
                    - "deployments"
                  verbs:
                    - "get"
                    - "list"
                    - "create"
                    - "update"
        {{- end }}
  template:
    metadata:
      name: "{{ `{{ .application }}` }}"
      annotations:
        argocd.argoproj.io/sync-wave: "{{ `{{ .wave }}` }}"
    spec:
      destination:
        namespace: "{{ `{{ .namespace }}` }}"
        server: "https://kubernetes.default.svc"
      source:
        chart: "{{ `{{ .chart.name }}` }}"
        targetRevision: "{{ `{{ .chart.version }}` }}"
        repoURL: "{{ `{{ .chart.url }}` }}"
      project: system
      syncPolicy:
        automated:
          prune: false
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            argocd.argoproj.io/managed-by: "{{ .Values.gitops.namespace }}"
        syncOptions:
          - CreateNamespace=true
          - Validate=false
      {{- if and .Values.gitlab.enabled (not .Values.shared.enabled) }}
      ignoreDifferences:
        - kind: GitLab
          name: gitlab
          namespace: gitlab-system
          jsonPointers:
            - /spec/chart/version
      {{- end }}
  templatePatch: |
    spec:
      source:
        helm:
        {{ `{{- if (index . "values") }}` }}
          values: |
            {{ `{{- .values | nindent 12 }}` }}
        {{ `{{- end }}` }}
      {{ `{{- if (index . "ignoreDifferences") }}` }}
      ignoreDifferences: | 
        {{ `{{- .ignoreDifferences | nindent 4 }}` }}
      {{ `{{- end }}` }}

{{- end }}
