{{ if .Values.bombastic.collector.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: bombastic-collector
  labels:
    app.kubernetes.io/name: bombastic-collector
    app.kubernetes.io/component: collector
    app.kubernetes.io/part-of: trustification
spec:
  schedule: {{ .Values.bombastic.collector.schedule | default "0 * * * *" }}
  suspend: {{ .Values.bombastic.collector.suspend | default false }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: bombastic-collector
            app.kubernetes.io/component: collector
            app.kubernetes.io/part-of: trustification
            metrics: "true"
        spec:
          restartPolicy: Never
          volumes:
            - name: config
              configMap:
                name: {{ .Values.config.name }}
            - name: guac-config
              configMap:
                name: guac-cm
          containers:
            - image: {{ .Values.guacImage }}
              imagePullPolicy: {{ .Values.imagePullPolicy }}
              name: service
              command: ["/opt/guac/guacone"]
              args:
                - "collect"
                - "s3"
                - "--s3-bucket"
                - "{{ .Values.bombastic.bucket }}"
{{ if .Values.deployMinio }}
                - "--s3-url"
                - "http://minio.{{ .Release.Namespace }}.svc.cluster.local:9000"
{{ else }}
                - "--s3-region"
                - "{{ .Values.region }}"
{{ end }}
                - "--limit"
                - "100"
              workingDir: "/guac"
              env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: "{{ .Values.bombastic.credentials }}"
                      key: aws_access_key_id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: "{{ .Values.bombastic.credentials }}"
                      key: aws_secret_access_key
                - name: AWS_REGION
                  value: "{{ .Values.region }}"
              ports:
                - containerPort: 2782
                  protocol: TCP
              resources:
                {{- toYaml .Values.bombastic.collector.resources | nindent 16 }}
              volumeMounts:
                - name: guac-config
                  mountPath: /guac
                  readOnly: true
                - mountPath: /etc/config
                  name: config
{{ end }}
