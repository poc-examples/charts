{{- if (and .Values.guac.enabled .Values.guac.database.enabled ) }}
kind: Job
apiVersion: batch/v1
metadata:
  name: post-install-guac
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "0"
    helm.sh/hook-weight: "5"
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/name: post-install-guac
    app.kubernetes.io/component: guac
    app.kubernetes.io/part-of: guac

spec:
  backoffLimit: 1000
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 600
  template:
    spec:

      restartPolicy: OnFailure

{{ with .Values.guac.initJob.serviceAccountName }}
      serviceAccountName: {{ . }}
{{ end }}

      volumes:
        - name: init-data
          configMap:
            name: post-install-guac-config

      containers:
        - name: post-install
          image: {{ .Values.guac.database.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: guac-admin-db
                  key: "db.host"
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: guac-admin-db
                  key: "db.port"
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: guac-admin-db
                  key: "db.name"
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: guac-admin-db
                  key: "db.user"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: guac-admin-db
                  key: "db.password"

            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: guac-user-db
                  key: "db.name"

            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: guac-user-db
                  key: "db.user"

            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: guac-user-db
                  key: "db.password"

          volumeMounts:
            - mountPath: /etc/init-data
              name: init-data

          command:
            - psql
            - -v
            - ON_ERROR_STOP=1
            - -v
            - db_name=$(DB_NAME)
            - -v
            - db_user=$(DB_USER)
            - -v
            - db_password=$(DB_PASSWORD)
            - -f
            - /etc/init-data/init.sql

{{ end }}
