{{- if .Values.deployPostgres }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: guac
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/component: database
      app.kubernetes.io/part-of: guac
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: guac
    spec:

      {{- if hasKey .Values.postgres "podSecurityContext" }}
      securityContext:
        {{ .Values.postgres.podSecurityContext | toYaml | nindent 8 }}
      {{- end }}

      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          imagePullPolicy: IfNotPresent

          {{- if hasKey .Values.postgres "containerSecurityContext" }}
          securityContext:
            {{ .Values.postgres.containerSecurityContext | toYaml | nindent 12 }}
          {{- end }}

          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: guac-admin-db
                  key: db.name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: guac-admin-db
                  key: db.user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: guac-admin-db
                  key: db.password
            - name: PGPASSWORD # used in combination with psql
              valueFrom:
                secretKeyRef:
                  name: guac-admin-db
                  key: db.password

          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          resources:
            {{- with .Values.postgres.resources }}
            {{ . | toYaml | nindent 12 }}
            {{- else }}
            limits:
              memory: 512Mi
            {{- end }}

          volumeMounts:
            - mountPath: /bitnami/postgresql
              name: storage

      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: postgres-pvc
{{ end }}